{"version":3,"sources":["App.js","serviceWorker.js","index.js","img/chevron-down.svg"],"names":["App","props","state","isOpen","current","page","this","setState","element","document","getElementById","setTimeout","scrollIntoView","behavior","alignToTop","jobDesc","vorpalClasses","jplClasses","skillsClasses","className","src","chevron","onClick","toggle","isOpened","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"qSAoGeA,E,YA5Fb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACXC,QAAQ,EACRC,QAAS,IAJK,E,oEAQXC,GACL,GAAGC,KAAKJ,MAAME,UAAYC,GAAiB,KAATA,EAChCC,KAAKC,SAAS,CAACJ,QAAQ,EAAOC,QAAS,SAErC,CACFE,KAAKC,SAAS,CAACJ,QAAQ,EAAMC,QAASC,IAEtC,IAAIG,EAAUC,SAASC,eAAe,YACtCC,YAAW,WAAWH,EAAQI,eAAe,CAACC,SAAU,SAAUC,YAAY,MAAQ,Q,+BAIjF,IAAD,OAEFC,EAAU,GACVC,EAAgB,aAChBC,EAAa,UACbC,EAAgB,aAEpB,OAAOZ,KAAKJ,MAAME,SAChB,IAAK,SACHY,GAAiB,YACjBD,EAAU,yBAAKI,UAAU,WACvB,yBAAKA,UAAU,SAAf,2BACA,yBAAKA,UAAU,WAAf,wBACA,yBAAKA,UAAU,YAAf,2BACA,yBAAKA,UAAU,QAAf,gPAEF,MACF,IAAK,MACHF,GAAc,YACdF,EAAU,yBAAKI,UAAU,WACvB,yBAAKA,UAAU,SAAf,6BACA,yBAAKA,UAAU,WAAf,wCACA,yBAAKA,UAAU,YAAf,iCACA,yBAAKA,UAAU,QAAf,kXAKF,MACF,IAAK,SACHD,GAAiB,YACjBH,EAAU,yBAAKI,UAAU,WACzB,yBAAKA,UAAU,SAAf,SACA,yBAAKA,UAAU,QAAf,2HACA,6BACA,yBAAKA,UAAU,SAAf,UACA,yBAAKA,UAAU,QAAf,4QAMJ,OACE,6BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,gBADjB,cAGE,yBAAKA,UAAU,OAHjB,8BAKE,yBAAKA,UAAU,gBACf,yBAAKC,IAAKC,IAASF,UAAU,aAE/B,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,wDACb,yBAAKA,UAAWH,EAAeM,QAAS,kBAAM,EAAKC,OAAO,aAC1D,yBAAKJ,UAAWF,EAAYK,QAAS,kBAAM,EAAKC,OAAO,UACvD,yBAAKJ,UAAWD,EAAeI,QAAS,kBAAM,EAAKC,OAAO,YAA1D,qBAEF,kBAAC,WAAD,CAAUC,SAAUlB,KAAKJ,MAAMC,QAC7B,yBAAKsB,GAAG,WAAWN,UAAU,uBAC1BJ,IAGL,yBAAKU,GAAG,oB,GArFFC,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASxB,SAASC,eAAe,SD6H3C,kBAAmBwB,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBErInBC,EAAOC,QAAU,IAA0B,2C","file":"static/js/main.f5b07788.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\n// import chevron from \"./chevron-down.svg\"\r\nimport chevron from \"./img/chevron-down.svg\"\r\nimport {Collapse} from 'react-collapse';\r\n\r\n// function App() {\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      current: \"\"\r\n    };\r\n  }\r\n\r\n  toggle(page) {\r\n    if(this.state.current === page && page !== \"\"){\r\n      this.setState({isOpen: false, current: \"\"});\r\n    }\r\n    else{\r\n      this.setState({isOpen: true, current: page});\r\n\r\n      var element = document.getElementById(\"scrollTo\");\r\n      setTimeout(function(){element.scrollIntoView({behavior: \"smooth\", alignToTop: true})},500);\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    var jobDesc = \"\";\r\n    var vorpalClasses = \"job vorpal\";\r\n    var jplClasses = \"job jpl\";\r\n    var skillsClasses = \"job skills\";\r\n\r\n    switch(this.state.current){\r\n      case \"vorpal\":\r\n        vorpalClasses += \" selected\";\r\n        jobDesc = <div className=\"jobDesc\">\r\n          <div className=\"title\">Chief Executive Officer</div>\r\n          <div className=\"company\">Vorpal Entertainment</div>\r\n          <div className=\"duration\">Aug 2019 – Present</div>\r\n          <div className=\"desc\">Self-employed managing my own company currently designing and creating board games and video games. Experience spanning a number of areas including: management, advertising, design, planning, programming, editing, game theory, and art.</div>\r\n        </div>;\r\n        break;\r\n      case \"jpl\":\r\n        jplClasses += \" selected\";\r\n        jobDesc = <div className=\"jobDesc\">\r\n          <div className=\"title\">Web Application Developer</div>\r\n          <div className=\"company\">NASA Jet Propulsion Laboratory (JPL)</div>\r\n          <div className=\"duration\">April 2015 – August 2019</div>\r\n          <div className=\"desc\">Full stack development of complex internal web applications\r\n          Developed a web application to draw and save highlighted terrain data on hi-rise Mars images\r\n          Created a visitor management system for all of JPL that manages and tracks thousands of visits to JPL per day\r\n          Built a web application to view multiple sets of flight data at the same time on a zoomable time scale</div>\r\n        </div>\r\n        break;\r\n      case \"skills\":\r\n        skillsClasses += \" selected\";\r\n        jobDesc = <div className=\"jobDesc\">\r\n        <div className=\"title\">About</div>\r\n        <div className=\"desc\">Full stack web developer with a focus on frontend development and design and an interest in working in media and music.</div>\r\n        <br />\r\n        <div className=\"title\">Skills</div>\r\n        <div className=\"desc\">5+ years experience with developing browser based software and web pages through the use of HTML, CSS, Javascript, Python, Flask, Polymer, React, Redux, and jQuery.\r\n        Additionally, I have many years experience with using Unity3D and C# doing personal game projects.</div>\r\n        </div>\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"mainWrapper\">\r\n          <div className=\"main parallax me headerText\">\r\n            <div className=\"flex flex-1\"></div>\r\n            Zac Skinner\r\n            <div className=\"hr\"></div>\r\n            Frontend/Software Developer\r\n            <div className=\"flex flex-1\"></div>\r\n            <img src={chevron} className=\"chevron\" />\r\n          </div>\r\n          <div className=\"jobs flex flex-column bg-black\">\r\n            <div className=\"flex flex-row flex-around flex-fill bg-white jobText\">\r\n              <div className={vorpalClasses} onClick={() => this.toggle(\"vorpal\")}></div>\r\n              <div className={jplClasses} onClick={() => this.toggle(\"jpl\")}></div>\r\n              <div className={skillsClasses} onClick={() => this.toggle(\"skills\")}>About and Skills</div>\r\n            </div>\r\n            <Collapse isOpened={this.state.isOpen}>\r\n              <div id=\"collapse\" className=\"collapse normalText\">\r\n                {jobDesc}\r\n              </div>\r\n            </Collapse>\r\n            <div id='scrollTo'></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/chevron-down.85cf0ba5.svg\";"],"sourceRoot":""}